<templateSet group="Go">
  <template name="sout" value="fmt.Println(&quot;$variable$&quot;)" description="fmt.Println($variable$)" toReformat="true" toShortenFQNames="true">
    <variable name="variable" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ifnotnull" value="&#9;if $error$ != nil {&#10;&#9;&#9;&#9;$function$&#10;&#9;&#9;}" description="if not null" toReformat="true" toShortenFQNames="true">
    <variable name="error" expression="clipboard()" defaultValue="&quot;error&quot;" alwaysStopAt="true" />
    <variable name="function" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_STATEMENT" value="true" />
    </context>
  </template>
  <template name="//h" value="/**&#10; * $Objective$&#10; *&#10; * @param  url  an absolute URL giving the base location of the image&#10; * @param  name the location of the image, relative to the url argument&#10; * @return      the image at the specified URL&#10; * @see         Image&#10; * @$date$ $time$&#10; * Author : cyrsis@github &#10; */" description="Comment for header Files" toReformat="true" toShortenFQNames="true">
    <variable name="Objective" expression="" defaultValue="&quot;Objective&quot;" alwaysStopAt="true" />
    <variable name="date" expression="date()" defaultValue="" alwaysStopAt="true" />
    <variable name="time" expression="time()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_FILE" value="true" />
    </context>
  </template>
  <template name="pair" value="_, error := $function$" description="pair of variable" toReformat="true" toShortenFQNames="true">
    <variable name="function" expression="" defaultValue="&quot;function&quot;" alwaysStopAt="true" />
    <context>
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
    </context>
  </template>
  <template name="switch" value="switch $OnExpression$ {&#10;&#9;case $expression2$:&#10;&#9;&#9;$statment$&#10;&#9;default:&#10;&#9;&#9;$anyOther$&#10;&#9;}&#10;" description="switch case default" toReformat="true" toShortenFQNames="true">
    <variable name="OnExpression" expression="clipboard()" defaultValue="" alwaysStopAt="true" />
    <variable name="expression2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="statment" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="anyOther" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ifelse" value="if $expression$ {&#10;&#9;&#9;$function1$&#10;&#9;}else if $expression2$ {&#10;&#9;&#9;$function2$&#10;&#9;}" description="if else if" toReformat="true" toShortenFQNames="true">
    <variable name="expression" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="function1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="expression2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="function2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_STATEMENT" value="true" />
    </context>
  </template>
  <template name="intArray" value="[$length$]int{$Value_1$, $Value_2$, $Value_3$, $Value_4$, $Value_5$}" description="IntArray with Size" toReformat="true" toShortenFQNames="true">
    <variable name="length" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Value_1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Value_2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Value_3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Value_4" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Value_5" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="soutc" value="fmt.Println($clipBoard$)" description="fmt.Println(clipboard)" toReformat="true" toShortenFQNames="true">
    <variable name="clipBoard" expression="clipboard()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_STATEMENT" value="true" />
    </context>
  </template>
  <template name="sliceString" value="sliceString := []string{&quot;$variable1$&quot;, &quot;$variable1$&quot;, &quot;$variable1$&quot;}" description="slice of String" toReformat="true" toShortenFQNames="true">
    <variable name="variable1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="dict" value="mapKStringVInt :=map[string]int{&quot;foo&quot;: 1, &quot;bar&quot;: 2}" description="maps in Go" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="rangeInDic" value="for k, v := range $Dic$ {&#10;        fmt.Printf(&quot;%s -&gt; %s\n&quot;, k, v)&#10;    }" description="Loop over variable" toReformat="true" toShortenFQNames="true">
    <variable name="Dic" expression="clipboard()" defaultValue="&quot;TypeDic&quot;" alwaysStopAt="true" />
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="funcTakesAllInt" value="func plusPlus(a, b, c int) int {&#10;    return a + b + c&#10;}" description="Function take all Int return int" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="GO_STATEMENT" value="true" />
    </context>
  </template>
  <template name="vararg" value="...$types$" description="var arg" toReformat="true" toShortenFQNames="true">
    <variable name="types" expression="" defaultValue="&quot;int&quot;" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
  <template name="closure" value="nextInt := intSeq()&#10;&#10;    fmt.Println(nextInt())&#10;    fmt.Println(nextInt())&#10;    fmt.Println(nextInt())&#10;" description="Assign Function to Variable" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="closureFunction" value="func $FunctionName$() func() int {&#10;      i:=0&#10;&#9;return func() int {&#10;&#9;&#9;i+=1&#10;&#10;&#9;&#9;return i&#10;&#9;}&#10;}" description="Func of Func with 2 level of return station" toReformat="true" toShortenFQNames="true">
    <variable name="FunctionName" expression="" defaultValue="&quot;intSeq&quot;" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
  <template name="ifb" value="if $expression${&#10;&#9;&#9;$doSomething$&#10;&#9;}" description="if block" toReformat="true" toShortenFQNames="true">
    <variable name="expression" expression="clipboard()" defaultValue="" alwaysStopAt="true" />
    <variable name="doSomething" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="recursion" value="func $recursion$(n int) int {&#10;&#9;if n == 0{&#10;&#9;&#9;return 1&#10;&#9;}&#10;&#9;return n* $recursion$(n-1)&#10;}" description="func that func itself" toReformat="true" toShortenFQNames="true">
    <variable name="recursion" expression="" defaultValue="&quot;recursion&quot;" alwaysStopAt="true" />
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="pointer" value="&amp;$Pointer$" description="point start wth &amp;" toReformat="true" toShortenFQNames="true">
    <variable name="Pointer" expression="" defaultValue="&quot;VariableName&quot;" alwaysStopAt="true" />
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="struct" value="type $person$ struct {&#10;    $name$ string&#10;    $age$ int&#10;}" description="Struct is like a Class in Go" toReformat="true" toShortenFQNames="true">
    <variable name="person" expression="" defaultValue="&quot;DataTypeName&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="age" expression="" defaultValue="&quot;age&quot;" alwaysStopAt="true" />
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="extensionMethodonStruct" value="func (data *$rect$) $area$($takes$) $returnType$ {&#10;    return data.width * data.height&#10;}" description="Extension Method on Struct" toReformat="true" toShortenFQNames="true">
    <variable name="rect" expression="" defaultValue="&quot;ExtendOn&quot;" alwaysStopAt="true" />
    <variable name="area" expression="" defaultValue="&quot;area" alwaysStopAt="true" />
    <variable name="takes" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="returnType" expression="" defaultValue="&quot;int&quot;" alwaysStopAt="true" />
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
  <template name="interface" value="type $geometry$ interface {&#10;    $area$() float64&#10;    $perim$() float64&#10;}" description="Interface on Struct" toReformat="true" toShortenFQNames="true">
    <variable name="geometry" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="area" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="perim" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO_BLOCK" value="true" />
      <option name="GO_EXPRESSION" value="true" />
      <option name="GO_FILE" value="true" />
      <option name="GO_STATEMENT" value="true" />
      <option name="GO_TYPE" value="true" />
    </context>
  </template>
</templateSet>